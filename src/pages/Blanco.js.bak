import React, { useState, useEffect, useContext } from 'react';
import './Blanco.css';
import { useLanguage } from "../context/LanguageContext";

function Blanco() {
  const { translations } = useLanguage();

  const [showPopup, setShowPopup] = useState(false);
  const [stage, setStage] = useState('setup');
  const [word, setWord] = useState('');
  const [players, setPlayers] = useState(3);
  const [current, setCurrent] = useState(1);
  const [blankIndex, setBlankIndex] = useState(null);
  const [showWord, setShowWord] = useState(false);

  const startGame = () => {
    if (!word.trim()) {
      alert(translations.enterWordAlert);
      return;
    }
    const randomBlank = Math.floor(Math.random() * players) + 1;
    setBlankIndex(randomBlank);
    setStage('player');
  };

  const nextPlayer = () => {
    setShowWord(false);
    if (current < players) {
      setCurrent(current + 1);
    } else {
      setStage('end');
    }
  };

  const resetGame = () => {
    setStage('setup');
    setCurrent(1);
    setWord('');
    setBlankIndex(null);
    setShowWord(false);
  };

  return (
    <div className="container">
      {stage === 'setup' && (
        <div className="card">
          <h2>🎲 {translations.configureGame}</h2>
          <label>{translations.numberOfPlayers}</label>
          <div className="player-counter">
            <button onClick={() => setPlayers(prev => Math.max(2, prev - 1))}>−</button>
            <span>{players}</span>
            <button onClick={() => setPlayers(prev => prev + 1)}>+</button>
          </div>
          <label>{translations.enterWord}</label>
          <input
            type="text"
            value={word}
            onChange={e => setWord(e.target.value)}
          />
          <button className="btn-primary" onClick={startGame}>{translations.play}</button>
        </div>
      )}

      {stage === 'player' && (
        <div className="card">
          <h2>{translations.player} {current}</h2>
          {!showWord ? (
            <button onClick={() => setShowWord(true)}>👁 {translations.showWord}</button>
          ) : (
            <>
              <p className={current === blankIndex ? 'blank' : 'word'}>
                {current === blankIndex ? translations.blank : word}
              </p>
              <button onClick={nextPlayer}>{translations.nextPlayer} ➡️</button>
            </>
          )}
        </div>
      )}

      {stage === 'end' && (
        <div className="card">
          <h2>🎉 {translations.gameBegins}</h2>
          <div className="button-row">
            <button onClick={() => setShowPopup(true)}>🕵️ {translations.revealSecretWord}</button>
            <button className="btn-primary" onClick={resetGame}>
              🔄 {translations.newRound}
            </button>
          </div>
        </div>
      )}

      {showPopup && (
        <div className="modal-overlay">
          <div className="modal">
            <h3>{translations.secretWordWas}</h3>
            <p className="revealed-word">{word}</p>
            <button onClick={() => setShowPopup(false)}>{translations.close}</button>
          </div>
        </div>
      )}
    </div>
  );
}

export default Blanco;
